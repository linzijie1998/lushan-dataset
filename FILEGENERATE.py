# -*- coding:utf-8 -*-

# @Time : 21/11/04 下午 06:29
# @Author : Linzijie
# @File : FILEGENERATE.py
# @Software: PyCharm
# @Version: v1.0
# @Description: 文件生成DEMO


from filewriter import NCGenerator
from filewriter import CSVGenerator

# --------------------------------六要素自动站AWS-------------------------------- #
# 文件头信息
aws_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'Software_version',
    'Pres_sens_HGT',
    'Temp_RH_sens_HGT',
    'Wind_sens_HGT',
    'Data_level',
    'Timezone',
    'Time_resolution',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
aws_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Software version',
    'Pressure sensor height',
    'Temperature and relative humidity sensors height',
    'Wind sensor height',
    'Data level',
    'Timezone',
    'Time resolution',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
aws_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    'm',
    'm',
    '-',
    '-',
    's',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
aws_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'u1',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'f',
    'str',
    'str',
    'u1',
    'str',
    'str',
    'str',
    'str'
]
aws_header_val = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'AWS (Atuomatic weather station)',
    'Huayun GH-BPR',
    'Central monitoring system',
    '1.5',
    '1.8',
    '2.0',
    'LX',
    'UTC+8',
    '60',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
aws_obs_code = [
    'Datetime',
    'Pres',
    'Temp',
    'RH',
    'Wind_Dire_AVG_1MIN',
    'Wind_Spee_AVG_1MIN',
    'Prec_1MIN',
    'Volt',
    'Q_Pres',
    'Q_Temp',
    'Q_RH',
    'Q_Wind_Dire_AVG_1MIN',
    'Q_Wind_Spee_AVG_1MIN',
    'Q_Prec_1MIN',
    'Q_Volt'
]
aws_obs_longname = [
    'Datetime',
    'Pressure',
    'Ambient temperature',
    'Relative humidity',
    'Average wind direction in 1 minute',
    'Average speed direction in 1 minute',
    'Precipitation in 1 minute',
    'Voltage',
    'Quality control code of pressure',
    'Quality control code of ambient temperature',
    'Quality control code of relative humidity',
    'Quality control code of average wind direction in 1 minute',
    'Quality control code of average speed direction in 1 minute',
    'Quality control code of precipitation in 1 minute',
    'Quality control code of voltage'
]
aws_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    'hPa',
    '°C',
    '%',
    '°',
    'm s-1',
    'mm',
    'V',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-'
]
aws_obs_nc_type = [
    'str',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1'
]
# --------------------------------颗粒物仪-------------------------------- #
# 文件头信息
aerm_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'Software_version',
    'AERM_sens_HGT',
    'Data_level',
    'Timezone',
    'Time_resolution',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
aerm_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Software version',
    'Aerosol measuring sensor height',
    'Data level',
    'Timezone',
    'Time resolution',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
aerm_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    's',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
aerm_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'u2',
    'str',
    'str',
    'str',
    'str'
]
aerm_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'AERM (Aerosol measuring)',
    'Thermo Scientific TEOM 1405-DF',
    '-',
    '2.5',
    'LX',
    'UTC+8',
    '360',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
aerm_obs_code = [
    'Datetime',
    'Status_condition',
    'Temp_ambi',
    'RH_ambi',
    'Pres_ambi',
    'MC_TEOMA',
    'MC_TEOMA_refe',
    'MC_TEOMA_base',
    'MC_TEOMA_1HR',
    'MC_TEOMA_24HR',
    'MC_TEOMB',
    'MC_TEOMB_refe',
    'MC_TEOMB_base',
    'MC_TEOMB_1HR',
    'MC_TEOMB_24HR',
    'MC_dich_1HR',
    'MC_dich_24HR',
    'Nois_TEOMA',
    'Nois_TEOMB',
    'Flow_mass_TEOMA',
    'Flow_mass_TEOMB',
    'Flow_mass_bypa',
    'Q_MC_TEOMA',
    'Q_MC_TEOMA_refe',
    'Q_MC_TEOMA_base',
    'Q_MC_TEOMA_1HR',
    'Q_MC_TEOMA_24HR',
    'Q_MC_TEOMB',
    'Q_MC_TEOMB_refe',
    'Q_MC_TEOMB_base',
    'Q_MC_TEOMB_1HR',
    'Q_MC_TEOMB_24HR',
    'Q_MC_dich_1HR',
    'Q_MC_dich_24HR'
]
aerm_obs_longname = [
    'Datetime',
    'Status condition',
    'Ambient temperature',
    'Ambient RH',
    'Ambient pressure',
    'Mass concentration for PM2.5 channel (TEOMA)',
    'Reference mass concentration for PM2.5 channel (TEOMA)',
    'Base mass concentration for PM2.5 channel (TEOMA)',
    '1-Hr massconcentration average for PM2.5 channel (TEOMA)',
    '24-Hr mass concentration average for PM2.5 channel (TEOMA)',
    'Mass concentration for PM coarse channel (TEOMB)',
    'Reference mass concentration for PM coarse channel (TEOMB)',
    'Base mass concentration for PM coarse channel (TEOMB)',
    '1-Hr mass concentration average for PM coarse channel (TEOMB)',
    '24-Hr mass concentration average for PM coarse channel (TEOMB)',
    '1-Hr dichot mass concentration average for PM 10',
    '24-Hr mass concentration average for PM 10',
    'Noise of PM2.5 channel (TEOMA)',
    'Noise of PM coarse channel (TEOMB)',
    'Flow mass of PM2.5 channel (TEOMA)',
    'Flow mass of PM coarse channel (TEOMC)',
    'Bypass flow mass',
    'Quality control code of mass concentration for PM2.5 channel (TEOMA)',
    'Quality control code of reference mass concentration for PM2.5 channel (TEOMA)',
    'Quality control code of base mass concentration for PM2.5 channel (TEOMA)',
    'Quality control code of 1-Hr mass concentration average for PM2.5 channel (TEOMA)',
    'Quality control code of 24-Hr mass concentration average for PM2.5 channel (TEOMA)',
    'Quality control code of Mass concentration for PM coarse channel (TEOMB)',
    'Quality control code of reference mass concentration for PM coarse channel (TEOMB)',
    'Quality control code of base mass concentration for PM coarse channel (TEOMB)',
    'Quality control code of 1-Hr mass concentration average for PM coarse channel (TEOMB)',
    'Quality control code of 24-Hr mass concentration average for PM coarse channel (TEOMB)',
    'Quality control code of 1-Hr mass concentration average for PM10',
    'Quality control code of 24-Hr mass concentration average for PM 10'
]
aerm_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    '-',
    '°C',
    '%',
    'atm',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    'ug m-3',
    '-',
    '-',
    'L min–1',
    'L min–1',
    'L min–1',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-'
]
aerm_obs_nc_type = [
    'str',
    'u1',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1'
]
# --------------------------------能见度仪-------------------------------- #
# 文件头信息
vis_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'Software_version',
    'VIS_sens_HGT',
    'Data_level',
    'Timezone',
    'Time_resolution',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
vis_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Software version',
    'Visibility sensor height',
    'Data level',
    'Timezone',
    'Time resolution',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
vis_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    's',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
vis_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'u1',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'u1',
    'str',
    'str',
    'str',
    'str'
]
vis_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'VIS (Visibility)',
    'Vaisala PWD22',
    'Huayun visibility detection sub-station monitoring program 1.01',
    '2.5',
    'LX',
    'UTC+8',
    '16',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
vis_obs_code = [
    'Datetime',
    'VIS_hori_1MIN',
    'VIS_hori_10MIN',
    'Q_VIS_hori_1MIN',
    'Q_VIS_hori_10MIN'
]
vis_obs_longname = [
    'Datetime',
    'Average horizontal visibility in 1 minute',
    'Average horizontal visibility in 10 minute',
    'Quality control code of average horizontal visibility in 1 minute',
    'Quality control code of average horizontal visibility in 10 minute'
]
vis_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    'm',
    'm',
    '-',
    '-'
]
vis_obs_nc_type = [
    'str', 'f', 'f', 'u1', 'u1'
]
# --------------------------------云高仪三级数据-------------------------------- #
# 文件头信息
yccl_l3_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'Software_version',
    'YCCL_sens_HGT',
    'Data_level',
    'Timezone',
    'Time_resolution',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
yccl_l3_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Software version',
    'Laser ceilometer sensor height',
    'Data level',
    'Timezone',
    'Time resolution',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
yccl_l3_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    's',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
yccl_l3_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'u1',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'u1',
    'str',
    'str',
    'str',
    'str'
]
yccl_l3_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'YCCL (Laser ceilometer)',
    'Vaisala CL31',
    'BL-view 1.1',
    '0.0',
    'L3',
    'UTC+8',
    '16',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
yccl_l3_obs_code = [
    'Datetime',
    'Unixtime',
    'Sample_count',
    'BL_HGT_1',
    'BL_IDX_1',
    'BL_HGT_2',
    'BL_IDX_2',
    'BL_HGT_3',
    'BL_IDX_3',
    'Cloud_status',
    'Cloud_base_1',
    'Cloud_base_2',
    'Cloud_base_3',
    'Parameters',
    'Q_BL_HGT_1',
    'Q_BL_HGT_2',
    'Q_BL_HGT_3',
    'Q_Cloud_base_1',
    'Q_Cloud_base_2',
    'Q_Cloud_base_3'
]
yccl_l3_obs_longname = [
    'Datetime',
    'UNIX time (Time stamp)',
    'Sample count',
    'First boundary layer height candidate (-999 if no candidate)',
    'Quality index for first boundary layer height candidate (-999 if no candidate)',
    'Second boundary layer height candidate (-999 if no candidate)',
    'Quality index for second boundary layer height candidate (-999 if no candidate)',
    'Third boundary layer height candidate (-999 if no candidate)',
    'Quality index for third boundary layer height candidate (-999 if no candidate)',
    'Cloud status',
    'First cloud base or vertical visibility  (-999 if no cloud base or vertical visibility)',
    'Second cloud base or vertical visibility  (-999 if no cloud base or vertical visibility)',
    'Third cloud base or vertical visibility  (-999 if no cloud base or vertical visibility)',
    'Parameters',
    'Quality control code of boundary layer height 1',
    'Quality control code of boundary layer height 2',
    'Quality control code of boundary layer height 3',
    'Quality control code of cloud base height 1',
    'Quality control code of cloud base height 2',
    'Quality control code of cloud base height 3'
]
yccl_l3_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    '-',
    '-',
    'm',
    '-',
    'm',
    '-',
    'm',
    '-',
    '-',
    'm',
    'm',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-'
]
yccl_l3_obs_nc_type = [
    'str',
    'str',
    'u4',
    'i',
    'i',
    'i',
    'i',
    'i',
    'i',
    'u1',
    'i',
    'i',
    'i',
    'str',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1'
]
# --------------------------------雨滴谱-------------------------------- #
# 文件头信息
rsd_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'Software_version',
    'RSD_sens_HGT',
    'Data_level',
    'Timezone',
    'Time_resolution',
    'Numb_part_diam_clas',
    'Numb_part_velo_clas',
    'Part_diam_clas',
    'Part_velo_clas',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
rsd_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Software version',
    'Raindrop size distribution sensor height',
    'Data level',
    'Timezone',
    'Time resolution',
    'Number of particle diameter class',
    'Number of particle velocity class',
    'Particle diameter class',
    'Particle velocity class',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
rsd_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    's',
    '-',
    '-',
    'mm',
    'm s-1',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
rsd_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'u1',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'u1',
    'u1',
    'u1',
    'array',
    'array',
    'str',
    'str',
    'str',
    'str'
]
rsd_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'RSD (Raindrop spectrum data)',
    'Thies Clima, Laser Precipitation Monitor',
    'LNM view',
    '1.5',
    'LX',
    'UTC+8',
    '60',
    '22',
    '20',
    '[0.125,0.25) [0.25,0.375) [0.375,0.5) [0.5,0.75) [0.75,1) [1,1.25) [1.25,1.5) [1.5,1.75) [1.75,2) [2,2.5) [2.5,3) '
    '[3,3.5) [3.5,4) [4,4.5) [4.5,5) [5,5.5) [5.5,6) [6,6.5) [6.5,7) [7,7.5) [7.5,8) [8,∞)',
    '[0,0.2) [0.2,0.4) [0.4,0.6) [0.6,0.8) [0.8,1) [1,1.4) [1.4,1.8) [1.8,2.2) [2.2,2.6) [2.6,3) [3,3.4) [3.4,4.2) '
    '[4.2,5) [5,5.8) [5.8,6.6) [6.6,7.4) [7.4,8.2) [8.2,9) [9,10) [10,∞)',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
rsd_obs_code = [
    'Datetime',
    'Rain',
    'Number_particles',
    'Syno_4677_5MIN',
    'Syno_4680_5MIN',
    'Syno_4678_5MIN',
    'Syno_4677_1MIN',
    'Syno_4680_1MIN',
    'Syno_4678_1MIN',
    'Prec_inte_tota_1MIN',
    'Prec_inte_liqu_1MIN',
    'Prec_inte_soli_1MIN',
    'Prec_cumu',
    'Prec_spec',
    'Q_data'
]
rsd_obs_longname = [
    'Datetime',
    'Rain',
    'Number of all measured particles',
    '5M Synop Tab.4677 (5 minutes mean value)',
    '5M Synop Tab.4680 (5 minutes mean value)',
    '5M Synop Tab.4678 (5 minutes mean value)',
    '1M Synop Tab.4677 (1 minutes mean value)',
    '1M Synop Tab.4680 (1 minutes mean value)',
    '1M Synop Tab.4678 (1 minutes mean value)',
    '1M Intensity (mm h-1) total precipitation',
    '1M Intensity (mm h-1) liquid precipitation',
    '1M Intensity (mm h-1) solid precipitation',
    'Precipitation amount',
    'Precipitation spectrum',
    'Quality control code of data'
]
rsd_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'mm h-1',
    'mm h-1',
    'mm h-1',
    'mm',
    '-',
    '-'
]
rsd_obs_nc_type = [
    'str',
    'u1',
    'u4',
    'i',
    'i',
    'str',
    'i',
    'i',
    'str',
    'f',
    'f',
    'f',
    'f',
    'array',
    'u1'
]
# --------------------------------微波辐射计-------------------------------- #
# 文件头信息
mrd_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'Software_version',
    'MRD_sens_HGT',
    'Data_level',
    'Timezone',
    'HGT',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
mrd_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Software version',
    'Microwave radiometer sensor height',
    'Data level',
    'Timezone',
    'Height',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
mrd_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '° ',
    '° ',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    'km',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
mrd_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'u1',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'array',
    'str',
    'str',
    'str',
    'str'
]
mrd_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'MRD (Microwave radiometer data)',
    'RAD (Radiometric MP-3000A)',
    'VizMet-B',
    '1.0',
    'L2',
    'UTC+8',
    '0 0.5 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9 1 1.1 1.2 '
    '1.3 1.4 1.5 1.6 1.7 1.8 1.9 2 2.25 2.5 2.75 3 3.25 3.5 3.75 4 4.25 4.5 '
    '4.75 5 5.25 5.5 5.75 6 6.25 6.75 7 7.25 7.5 7.75 8 8.25 8.5 8.75 9 9.25 9.5 9.75 10',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
mrd_obs_code = [
    'Datetime',
    'Datetime_31',
    'GPS_DT',
    'LAT',
    'LON',
    'ALT',
    'Magnetic_variation',
    'Status',
    'Quality',
    'Number_satellites',
    'Datetime_201',
    'Temp_ambi',
    'RH',
    'Pres',
    'Temp_IR',
    'Rain',
    'Datetime_301',
    'Vint',
    'Lint',
    'Cloud_base',
    'Datetime_401',
    'Temp_prof',
    'Datetime_402',
    'VAP_prof',
    'Datetime_403',
    'LWC_prof',
    'Datetime_404',
    'RH_prof',
    'Q_Temp_ambi',
    'Q_RH',
    'Q_Pres',
    'Q_Temp_IR',
    'Q_Rain',
    'Q_Vint',
    'Q_Lint',
    'Q_CB',
    'Q_Temp_prof',
    'Q_VAP_prof',
    'Q_LWC_prof',
    'Q_RH_prof'
]
mrd_obs_longname = [
    'Datetime',
    '31 datetime of GPS datetime, latitude, longitude, altitude, magnetic variation, status, '
    'quality and number satellites',
    'GPS datetime',
    'Latitude',
    'Longitude',
    'Altitude',
    'Magnetic variation',
    'Status',
    'Quality',
    'Number satellites',
    '201 datetime of ambient temperature at surface, relative humidity at surface, pressure at surface, '
    'infrared temperature at surface and rain',
    'Ambient temperature at surface',
    'Relative humidity at surface',
    'Pressure at surface',
    'Infrared temperature at surface',
    'Rain',
    '301 datetime of Vint, Lint, Cloud_base',
    'Column integrated vapor',
    'Column integrated liquid water',
    'Cloud base height',
    '401 datetime of Temp_prof',
    'Temperature vector retrieval data record (profile)',
    '402 datetime of VAP_prof',
    'Vapor density vector retrieval data record (profile)',
    '403 datetime of LWC_prof',
    'Liquid density vector retrieval data record (profile)',
    '404 datetime of RH_prof',
    'Relative humidity vector retrieval data record (profile)',
    'Quality control code of ambient temperature at surface',
    'Quality control code of relative humidity at surface',
    'Quality control code of pressure at surface',
    'Quality control code of infrared temperature at surface',
    'Quality control code of rain',
    'Quality control code of column integrated vapor (precipitable water vapor)',
    'Quality control code of column integrated vapor (liquid water path)',
    'Quality control code of cloud base height',
    'Quality control code of temperature vector retrieval data record (profile)',
    'Quality control code of vapor density vector retrieval data record (profile)',
    'Quality control code of liquid density vector retrieval data record (profile)',
    'Quality control code of relative humidity vector retrieval data record (profile)'
]
mrd_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    'yyyy-mm-dd hh:mm:ss',
    'K',
    '%',
    'hPa',
    'K',
    '-',
    'yyyy-mm-dd hh:mm:ss',
    'cm',
    'mm',
    'km',
    'yyyy-mm-dd hh:mm:ss',
    'K',
    'yyyy-mm-dd hh:mm:ss',
    'g m-3',
    'yyyy-mm-dd hh:mm:ss',
    'g m-3',
    'yyyy-mm-dd hh:mm:ss',
    '%',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-'
]
mrd_obs_nc_type = [
    'str',
    'str',
    'str',
    'f',
    'f',
    'f',
    'f',
    'str',
    'f',
    'f',
    'str',
    'f',
    'f',
    'f',
    'f',
    'u1',
    'str',
    'f',
    'f',
    'f',
    'str',
    'array',
    'str',
    'array',
    'str',
    'array',
    'str',
    'array',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1',
    'u1'
]

# --------------------------------YCCL_L2-------------------------------- #
# 文件头信息
yccl_l2_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'Software_version',
    'YCCL_sens_HGT',
    'Date_level',
    'Timezone',
    'Time_resolution',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
yccl_l2_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Software version',
    'Laser ceilometer sensor height',
    'Data level',
    'Timezone',
    'Time resolution',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
yccl_l2_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    's',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
yccl_l2_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'u1',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'u1',
    'str',
    'str',
    'str',
    'str'
]
yccl_l2_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'YCCL (Laser ceilometer)',
    'Vaisala CL31',
    'BL-view 1.1',
    '0.0',
    'L2',
    'UTC+8',
    '16',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
yccl_l2_obs_code = [
    'Datetime',
    'Unixtime',
    'BS_prof',
    'Q_BS_prof'
]
yccl_l2_obs_longname = [
    'Datetime',
    'UNIX time (Time stamp)',
    'Backscatter profile',
    'Quality control code of backscatter profile'
]
yccl_l2_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    '-',
    '10-9 m-1 sr-1',
    '-'
]
yccl_l2_obs_nc_type = [
    'str', 'str', 'array', 'u1'
]
# ---------------------------RRD_LAVE & RRD_LPRO--------------------------- #
# 文件头信息
rrd_lave_and_lpro_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'RRD_sens_HGT',
    'Service_version',
    'Device_version',
    'Devi_seri_numb',
    'Calibration_constant',
    'MMR_data_qual',
    'Time_AVG',
    'Sampling_rate',
    'Data_level',
    'Timezone',
    'Time_resolution',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
rrd_lave_and_lpro_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Rain radar height',
    'Version number of the MRR Service (service version number)',
    'Version number of the MRR firmware (device version)',
    'Serial number of the MRR (device serial number)',
    'Calibration constant',
    'Micro Rain Radar Data quality',
    'Averaging time in seconds',
    'Sampling rate of the RADAR signal in the time domain',
    'Data level',
    'Timezone',
    'Time resolution',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
rrd_lave_and_lpro_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    's',
    'Hz',
    '-',
    '-',
    's',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
rrd_lave_and_lpro_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'u1',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'str',
    'str',
    'str',
    'u1',
    'u2',
    'str',
    'str',
    'u1',
    'str',
    'str',
    'str',
    'str'
]
rrd_lave_and_lpro_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'RRD (Rain radar data)',
    'METE (METEK)',
    '1.5',
    'SVS: 6.0.0.6',
    'DVS: 6.00',
    'DSN: 0505123820',
    'CC: 2279042',
    'MDQ: 100',
    '60',
    '125000',
    'Lpro/Lave',
    'UTC+8',
    '10',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
rrd_lave_and_lpro_obs_code = [
    'Datetime',
    'HGT',
    'Transfer_function',
    'Spectral_reflectivities',
    'Drop_size',
    'Spec_drop_dens',
    'Path_Inte_Atte',
    'Z_Atte',
    'Z_Atte_corr',
    'Rain_rate',
    'LWC',
    'W',
    'Q_data'
]
rrd_lave_and_lpro_obs_longname = [
    'Datetime',
    'Height',
    'Transfer function',
    'Spectral reflectivities',
    'Drop size',
    'Spectral drop densities',
    'Path integrated attenuation',
    'Attenuated radar reflectivity',
    'Radar reflectivity',
    'Rain rate',
    'Liquid water content',
    'Fall velocity',
    'Quality control code of data'
]
rrd_lave_and_lpro_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    'm',
    '-',
    'dB',
    'mm',
    'mm-1 m-3',
    'dB',
    'dBZ',
    'dBZ',
    'mm h-1',
    'g m-3',
    'm s-1',
    '-'
]
rrd_lave_and_lpro_obs_nc_type = [
    'str', 'array31_i', 'array31_f', 'array64', 'array64', 'array64',
    'array31_f', 'array31_f', 'array31_f', 'array31_f', 'array31_f', 'array31_f',
    'u1'
]
# --------------------------------RRD_LRAW-------------------------------- #
# 文件头信息
rrd_lraw_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'RRD_sens_HGT',
    'Service_version',
    'Device_version',
    'Devi_seri_numb',
    'Bandwidth',
    'Calibration_constant',
    'MMR_data_qual',
    'Data_level',
    'Timezone',
    'Time_resolution',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
rrd_lraw_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Rain radar height',
    'Version number of the MRR Service (service version number)',
    'Device version number (firmware)',
    'Device serial number',
    'Bandwidth',
    'Calibration constant',
    'Micro Rain Radar Data quality',
    'Data level',
    'Timezone',
    'Time resolution',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
rrd_lraw_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    's',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
rrd_lraw_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'u1',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'u1',
    'str',
    'str',
    'str',
    'str'
]
rrd_lraw_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'RRD (Rain radar data)',
    'METE (METEK)',
    '1.5',
    'SVS: 6.0.0.6',
    'DVS: 6.00',
    'DSN: 0505123820',
    'BW: 40200',
    'CC: 2279042',
    'MDQ: 100',
    'Lraw',
    'UTC+8',
    '10',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
rrd_lraw_obs_code = [
    'Datetime',
    'HGT',
    'Transfer_function',
    'Spectral_reflectivities',
    'Q_data'
]
rrd_lraw_obs_longname = [
    'Datetime',
    'Height',
    'Transfer function',
    'Spectral reflectivities',
    'Quality control code of data'
]
rrd_lraw_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    'm',
    '-',
    'dB',
    '-'
]
rrd_lraw_obs_nc_type = [
    'str', 'array32_i', 'array32_d', 'array64', 'u1'
]
# --------------------------------雨量筒-------------------------------- #
# 文件头信息
pre_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'Software_version',
    'Prec_sens_HGT',
    'Data_level',
    'Timezone',
    'Time_resolution',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
pre_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Software version',
    'Rain gauge height',
    'Data level',
    'Timezone',
    'Time resolution',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
pre_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    's',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
pre_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'u1',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'str'
]
pre_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'PRE (Precipitation)',
    'HOBO onset RG3-M',
    'HOBOware',
    '1.2',
    'LX',
    'UTC+8',
    '-',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
pre_obs_code = [
    'Datetime',
    'TEM',
    'PRE',
    'TEM_Max',
    'PRE_Cum',
    'Q_TEM',
    'Q_PRE',
    'Q_TEM_Max',
    'Q_PRE_Cum'
]
pre_obs_longname = [
    'Datetime',
    'Datetime of temperature',
    'Temperature',
    'Datetime of precipation',
    'Precipitation',
    'Date and o’clock of temperature maximum and cumulative precipitation',
    'Temperature maximum',
    'Cumulative precipitation',
    'Quality control code of temperature',
    'Quality control code of precipitation',
    'Quality control code of temperature maximum',
    'Quality control code of cumulative precipitation'
]
pre_obs_units = [
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '°C',
    'yyyy-mm-dd hh:mm:ss',
    'mm',
    'yyyy-mm-dd hh:mm:ss',
    '°C',
    'mm',
    '-',
    '-',
    '-',
    '-'
]
pre_obs_nc_type = [
    'str', 'f', 'f', 'f', 'f', 'i', 'i', 'i', 'i'
]
# --------------------------------FSD-------------------------------- #
# 文件头信息
fsd_header_code = [
    'Station_name',
    'Country',
    'Province',
    'City',
    'County',
    'Station_ID',
    'LAT',
    'LON',
    'ALT',
    'Station_type',
    'Station_level',
    'Admi_code_CHN',
    'Mete_data_code',
    'Manufacturer_model',
    'Software_version',
    'FSD_sens_HGT',
    'Data_level',
    'Timezone',
    'Time_resolution',
    'Sample_area',
    'Channel_count',
    'Size_each_bin',
    'Obse_begi_DT',
    'Obse_end_DT',
    'Data_crea_DT',
    'Dataset_version'
]
fsd_header_longname = [
    'Station name',
    'Country',
    'Province',
    'City',
    'County',
    'Station identity',
    'Latitude',
    'Longitude',
    'Altitude',
    'Station type',
    'Station level',
    'Administrative area code of China',
    'Meteorological data code',
    'Manufacturer and model',
    'Software version',
    'Fog monitor height',
    'Data level',
    'Timezone',
    'Time resolution',
    'Sample area',
    'Channel count',
    'Size of each bin',
    'Observing beginning datetime',
    'Observing ending datetime',
    'Data creating datetime',
    'Dataset version'
]
fsd_header_units = [
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    '°',
    '°',
    'm',
    '-',
    '-',
    '-',
    '-',
    '-',
    '-',
    'm',
    '-',
    '-',
    's',
    'mm2',
    '-',
    'um',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    'yyyy-mm-dd hh:mm:ss',
    '-'
]
fsd_header_nc_type = [
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'f',
    'u2',
    'str',
    'str',
    'str',
    'str',
    'str',
    'str',
    'f',
    'str',
    'str',
    'u1',
    'f',
    'u1',
    'array',
    'str',
    'str',
    'str',
    'str'
]
fsd_header_value = [
    'Lushan cloud and fog experiment station',
    'China',
    'Jiangxi',
    'Jiujiang',
    'Lushan scenic area',
    'LSYWZ',
    '29.57',
    '115.97',
    '1080',
    '1',
    '015',
    '360400',
    'FSD (Fog droplet distribution)',
    'DMT FM-100',
    'PADS3 (Old version) / PADS4 (New version)',
    '0.8',
    'LX',
    'UTC+8',
    '1',
    '0.24',
    '20',
    '2 4 6 8 10 12 14 16 18 20 23 26 29 32 35 38 41 44 47 50',
    '',
    '',
    '',
    '1.0'
]
# 观测要素信息
fsd_obs_code = [
    'Datetime',
    'Temp_ambi',
    'Temp_reco',
    'Reje_DOF',
    # 'Numb_part_chan',
    'Numb_conc',
    'Volu_conc',
    'LWC',
    'MVD',
    'ED',
    'TAS',
    'Status',
    'Q_data',
    'Numb_part_ch0',
    'Numb_part_ch1',
    'Numb_part_ch2',
    'Numb_part_ch3',
    'Numb_part_ch4',
    'Numb_part_ch5',
    'Numb_part_ch6',
    'Numb_part_ch7',
    'Numb_part_ch8',
    'Numb_part_ch9',
    'Numb_part_ch10',
    'Numb_part_ch11',
    'Numb_part_ch12',
    'Numb_part_ch13',
    'Numb_part_ch14',
    'Numb_part_ch15',
    'Numb_part_ch16',
    'Numb_part_ch17',
    'Numb_part_ch18',
    'Numb_part_ch19'
]
fsd_obs_longname = [
    'Datetime',
    'Ambient temperature',
    'Recovery temperature',
    'Reject particles that fall outside the FM 100’s depth of field',
    # 'Particles number per channel',
    'Number concentration',
    'Volume concentration',
    'Liquid water content',
    'Median volume diameter',
    'Effective diameter',
    'True air speed',
    'Status',
    'Quality control code of data',
    'Numb_part_ch0',
    'Numb_part_ch1',
    'Numb_part_ch2',
    'Numb_part_ch3',
    'Numb_part_ch4',
    'Numb_part_ch5',
    'Numb_part_ch6',
    'Numb_part_ch7',
    'Numb_part_ch8',
    'Numb_part_ch9',
    'Numb_part_ch10',
    'Numb_part_ch11',
    'Numb_part_ch12',
    'Numb_part_ch13',
    'Numb_part_ch14',
    'Numb_part_ch15',
    'Numb_part_ch16',
    'Numb_part_ch17',
    'Numb_part_ch18',
    'Numb_part_ch19'
]
fsd_obs_units = [
    'yyyy - mm - dd hh:mm: ss',
    '°C',
    '°C',
    '-',
    # '-',
    'cm-3',
    'um3 cm-3',
    'g m-3',
    'um',
    'um',
    'm s-1',
    '-',
    '-',
    'Numb_part_ch0',
    'Numb_part_ch1',
    'Numb_part_ch2',
    'Numb_part_ch3',
    'Numb_part_ch4',
    'Numb_part_ch5',
    'Numb_part_ch6',
    'Numb_part_ch7',
    'Numb_part_ch8',
    'Numb_part_ch9',
    'Numb_part_ch10',
    'Numb_part_ch11',
    'Numb_part_ch12',
    'Numb_part_ch13',
    'Numb_part_ch14',
    'Numb_part_ch15',
    'Numb_part_ch16',
    'Numb_part_ch17',
    'Numb_part_ch18',
    'Numb_part_ch19'
]
fsd_obs_nc_type = [
    'str',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'f',
    'u1',
    'Numb_part_ch0',
    'Numb_part_ch1',
    'Numb_part_ch2',
    'Numb_part_ch3',
    'Numb_part_ch4',
    'Numb_part_ch5',
    'Numb_part_ch6',
    'Numb_part_ch7',
    'Numb_part_ch8',
    'Numb_part_ch9',
    'Numb_part_ch10',
    'Numb_part_ch11',
    'Numb_part_ch12',
    'Numb_part_ch13',
    'Numb_part_ch14',
    'Numb_part_ch15',
    'Numb_part_ch16',
    'Numb_part_ch17',
    'Numb_part_ch18',
    'Numb_part_ch19'
]

# ---------------------服务器数据库配置--------------------- #
ip = '10.130.2.12'
username = 'user1'
pwd = 'cuit-303'
db_name = 'lushan_data'


def generate_nc_sample():
    is_sample = True
    obj = NCGenerator('./', ip, username, pwd, db_name)
    # obj.generate_nc_file('AWS', aws_header_code, aws_header_longname, aws_header_units, aws_header_nc_type,
    #                      aws_header_val, aws_obs_code, aws_obs_longname, aws_obs_units, aws_obs_nc_type, is_sample)
    # obj.generate_nc_file('AERM', aerm_header_code, aerm_header_longname, aerm_header_units, aerm_header_nc_type,
    #                      aerm_header_value, aerm_obs_code, aerm_obs_longname, aerm_obs_units, aerm_obs_nc_type,
    #                      is_sample)
    # obj.generate_nc_file('VIS', vis_header_code, vis_header_longname, vis_header_units, vis_header_nc_type,
    #                      vis_header_value, vis_obs_code, vis_obs_longname, vis_obs_units, vis_obs_nc_type, is_sample)
    # obj.generate_nc_file('YCCL_L3', yccl_l3_header_code, yccl_l3_header_longname, yccl_l3_header_units,
    #                      yccl_l3_header_nc_type, yccl_l3_header_value, yccl_l3_obs_code, yccl_l3_obs_longname,
    #                      yccl_l3_obs_units, yccl_l3_obs_nc_type, is_sample)
    # obj.generate_nc_file('RSD', rsd_header_code, rsd_header_longname, rsd_header_units, rsd_header_nc_type,
    #                      rsd_header_value, rsd_obs_code, rsd_obs_longname, rsd_obs_units, rsd_obs_nc_type, is_sample)
    # obj.generate_nc_file('MRD', mrd_header_code, mrd_header_longname, mrd_header_units, mrd_header_nc_type,
    #                      mrd_header_value, mrd_obs_code, mrd_obs_longname, mrd_obs_units, mrd_obs_nc_type, is_sample)
    # obj.generate_nc_file('YCCL_L2', yccl_l2_header_code, yccl_l2_header_longname, yccl_l2_header_units,
    #                      yccl_l2_header_nc_type, yccl_l2_header_value, yccl_l2_obs_code, yccl_l2_obs_longname,
    #                      yccl_l2_obs_units, yccl_l2_obs_nc_type, is_sample)
    # obj.generate_nc_file('RRD_Lraw', rrd_lraw_header_code, rrd_lraw_header_longname, rrd_lraw_header_units,
    #                      rrd_lraw_header_nc_type, rrd_lraw_header_value, rrd_lraw_obs_code, rrd_lraw_obs_longname,
    #                      rrd_lraw_obs_units, rrd_lraw_obs_nc_type, is_sample)
    # obj.generate_nc_file('RRD_Lpro', rrd_lave_and_lpro_header_code, rrd_lave_and_lpro_header_longname,
    #                      rrd_lave_and_lpro_header_units, rrd_lave_and_lpro_header_nc_type,
    #                      rrd_lave_and_lpro_header_value, rrd_lave_and_lpro_obs_code, rrd_lave_and_lpro_obs_longname,
    #                      rrd_lave_and_lpro_obs_units, rrd_lave_and_lpro_obs_nc_type, is_sample)
    obj.generate_nc_file('RRD_Lave', rrd_lave_and_lpro_header_code, rrd_lave_and_lpro_header_longname,
                         rrd_lave_and_lpro_header_units, rrd_lave_and_lpro_header_nc_type,
                         rrd_lave_and_lpro_header_value, rrd_lave_and_lpro_obs_code, rrd_lave_and_lpro_obs_longname,
                         rrd_lave_and_lpro_obs_units, rrd_lave_and_lpro_obs_nc_type, is_sample)
    # obj.generate_nc_file('FSD', fsd_header_code, fsd_header_longname, fsd_header_units, fsd_header_nc_type,
    #                      fsd_header_value, fsd_obs_code, fsd_obs_longname, fsd_obs_units, fsd_obs_nc_type, is_sample)
    # obj.generate_nc_file('PRE', pre_header_code, pre_header_longname, pre_header_units, pre_header_nc_type,
    #                      pre_header_value, pre_obs_code, pre_obs_longname, pre_obs_units, pre_obs_nc_type, is_sample)


def generate_csv_sample():
    is_sample = False
    obj = CSVGenerator('../LushanDataset/CSV', ip, username, pwd, db_name)
    # obj.generate_csv_file('AWS', aws_header_val, aws_obs_code, is_sample)
    # obj.generate_csv_file('AERM', aerm_header_value, aerm_obs_code, is_sample)
    # obj.generate_csv_file('VIS', vis_header_value, vis_obs_code, is_sample)
    # obj.generate_csv_file('YCCL_L3', yccl_l3_header_value, yccl_l3_obs_code, is_sample)
    # obj.generate_csv_file('RSD', rsd_header_value, rsd_obs_code, is_sample)
    obj.generate_csv_file('MRD', mrd_header_value, mrd_obs_code, is_sample)
    # obj.generate_csv_file('YCCL_L2', yccl_l2_header_value, yccl_l2_obs_code, is_sample)
    # obj.generate_csv_file('RRD_Lraw', rrd_lraw_header_value, rrd_lraw_obs_code, is_sample) # success

    # obj.generate_csv_file('RRD_Lpro', rrd_lave_and_lpro_header_value, rrd_lave_and_lpro_obs_code, is_sample)
    # obj.generate_csv_file('RRD_Lave', rrd_lave_and_lpro_header_value, rrd_lave_and_lpro_obs_code, is_sample)

    # obj.generate_csv_file('FSD', fsd_header_value, fsd_obs_code, is_sample)
    # obj.generate_csv_file('PRE', pre_header_value, pre_obs_code, is_sample)


if __name__ == '__main__':
    generate_nc_sample()
    # generate_csv_sample()
